package main

import "fmt"

//принимаем на вход элемент, который нужно найти, слайс, минимальный и максимальный индекс
func binarySearch(n int, slice []int, left int, right int) int {
	//если минимальный индекс становится больше, чем правый индекс
	//значит мы не нашли искомого элемента в нашем слайсе
	if left > right {
		return -1
	}
	//индекс среднего элемента
	middle := (left + right) / 2

	//если серединный элемент раввен нашему искомому, тогда возвращаем индекс серединного элемента(искомый элемент)
	if slice[middle] == n {
		return middle
		//если средний элемент меньше, чем искомое число, тогда минимальный индекс будет
		//средний индекс+1, далее рекурсия, где мы пытаемся найти искомое значение через
		//средний элемент
	} else if slice[middle] < n {
		return binarySearch(n, slice, middle+1, right)
		//если средний элемент больше, чем искомое число, тогда максимальный индекс будет
		//средний индекс-1, далее рекурсия, где мы пытаемся найти искомое значение через
		//средний элемент
	} else {
		return binarySearch(n, slice, left, middle-1)
	}
}

func main() {
	//отсортированный слайс
	sortedSlice := []int{3, 5, 7, 12, 14, 22, 32, 56, 78, 99, 115, 121}
	//вводим искомый элемент
	var num int
	fmt.Print("Введите искомый элемент: ")
	fmt.Scan(&num)
	//печатаем искомый индекс отсортированного слайса
	fmt.Println(binarySearch(num, sortedSlice, 0, len(sortedSlice)-1))
}
