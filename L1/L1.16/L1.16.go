package main

import "fmt"

func quicksort(nums []int) []int {
	//если длина слайса меньше двух, тогда завершаем нашу рекурсию
	if len(nums) < 2 {
		return nums
	}

	//выбираем опорный элемент
	pivot := nums[len(nums)/2]
	//создаем слайс, где будут храниться элементы меньше, чем опорный элемент
	left := []int{}
	//создаем слайс, где будут храниться элементы больше, чем опорный элемент
	right := []int{}
	//создаем слайс, где будут храниться отсортированные элементы
	sortedSlice := []int{}
	//проходимся по слайсу наших чисел
	for i, v := range nums {
		//если индекс равен индексу опорного элемента, тогда пропускаем оставшиеся действия и идем к след. индексу
		//в нашем цикле
		if i == len(nums)/2 {
			continue
			//если значение, меньше чем значение опорного, тогда добавляем элемент в слайс left
		} else if v < pivot {
			left = append(left, v)
			//если значение, больше чем значение опорного, тогда добавляем элемент в слайс right
		} else {
			right = append(right, v)
		}
	}
	//добавляем в sortedslice отсортированный слайс(с помощью рекурсии) left и опорный элемент
	sortedSlice = append(quicksort(left), pivot)
	//добавляем в наш слайс отсортированный слайс right(также с помощью рекурсии)
	sortedSlice = append(sortedSlice, quicksort(right)...)
	//возвращаем отсортированный слайс
	return sortedSlice
}

func main() {
	//инициализируем неотсортированный слайс
	slice := []int{2, 4, 1, 13, 44, 22, 45, 111, 10, 21, 30}
	//печатаем отсортированный слайс
	fmt.Println(quicksort(slice))
}
